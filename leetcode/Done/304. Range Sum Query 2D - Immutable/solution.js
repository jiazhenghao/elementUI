/**
 * @param {number[][]} matrix
 */

var NumMatrix = function (matrix) {
    //这个this非常重要，不然，在网页端会报错。
    this.dp = [];
    if (matrix.length == 0 || matrix[0].length == 0)
        return;
    var n = matrix.length;
    var m = matrix[0].length;

    for (let i = 0; i < n + 1; i++) {
        let temp = [];
        for (let j = 0; j < m + 1; j++) {
            temp.push(0);
        }
        this.dp.push(temp);
    }

    for (let r = 0; r < matrix.length; r++) {
        for (let c = 0; c < matrix[0].length; c++) {
            //左边+上边-左上+matrix的值
            this.dp[r + 1][c + 1] = this.dp[r + 1][c] + this.dp[r][c + 1] + matrix[r][c] - this.dp[r][c];
        }
    }
};

/** 
 * @param {number} row1 
 * @param {number} col1 
 * @param {number} row2 
 * @param {number} col2
 * @return {number}
 */
NumMatrix.prototype.sumRegion = function (row1, col1, row2, col2) {
    return this.dp[row2 + 1][col2 + 1] - this.dp[row1][col2 + 1] - this.dp[row2 + 1][col1] + this.dp[row1][col1];
};

/** 
 * Your NumMatrix object will be instantiated and called as such:
 * var obj = new NumMatrix(matrix)
 * var param_1 = obj.sumRegion(row1,col1,row2,col2)
 */

NumMatrix([
    [-5208, 1041, -93779, -64152, 17850, 29055, -63731, -23568, 41170, 58457, -39616, 55683, -51662, -75015, 21726],
    [4535, -72412, 86878, -60825, 67088, 48794, -23471, -22403, 58200, -31153, -94668, -27274, -11003, 33894, -66125],
    [-9538, -33861, 54822, 42636, 48430, -56030, -33348, -30617, 5219, 56501, -95879, -73537, -18157, -72815, -40977],
    [15602, 40115, -32475, 99011, 47251, 84035, 83793, -74389, -99042, 65460, 11671, -95294, 68311, 47893, 71866],
    [69607, 57288, 55022, 36610, -75113, 31344, 34319, -13381, -74800, -71904, -15625, -5398, -29689, -68805, -41994],
    [-32276, 95017, -96452, -47311, 13238, 46324, 95358, 13247, -30930, 5815, -36748, -25712, -83982, 29391, -73922],
    [-29140, -70403, -3168, 12219, -4473, -10013, -85502, 87222, -44858, 66506, -99821, -16992, -80758, 59210, 87145],
    [-9557, 67725, -27359, -28647, 46781, -67948, -28154, -3498, 91489, -3887, -96422, 6568, 42380, 73264, -55406],
    [40555, 70153, -51490, -14237, 9684, -54000, -8443, -32063, -96157, -70083, -7050, 56221, 93013, -1157, -45593],
    [-28686, -54296, 628, 11189, 18227, -64455, -10528, -69244, 94796, -39806, 69194, 45024, -14417, -51291, 6387],
    [-28485, 36898, 97259, -83875, 83650, -36715, 80692, -55055, 40025, -69379, -1548, -13045, 23318, 79349, -42774],
    [82645, 17721, 84052, -35036, -751, 90269, -77187, 51972, -90217, -5956, -34552, 95560, 40436, 51650, 72778],
    [-970, 77788, 10423, -1406, -90844, 6732, -60197, 59393, -82111, 33737, -4731, -52679, -12011, 69741, -91931]
]);

/*
Runtime: 76 ms, faster than 98.57% 
Memory Usage: 42 MB, less than 13.43%
*/

